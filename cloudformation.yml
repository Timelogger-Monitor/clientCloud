AWSTemplateFormatVersion: 2010-09-09
Description: for task trackre cloud setup.
Parameters:
  EC2AMI:
    Type: String
    Default: ami-0346da7fde1c72952
    Description: The ubuntu AMI to use.
  EC2keyName:
    #  first make sure ec2 key pair exists
    Type: String
    Default: time-logger
    Description: key name for ec2 instance.
  EC2InstanceType:
    Type: String
    Default: t2.micro
    Description: instance type for ec2 instance.
  AWSRegion:
    Type: String
    Default: ap-south-1
  ServiceName:
    Type: String
    Default: timelogger-client
Resources:
  CognitoUserPool:
    Type: "AWS::Cognito::UserPool"
    Properties:
      MfaConfiguration: "OFF"
      UserPoolName: !Join ["", [!Ref ServiceName, -user-pool]]
      UsernameAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: False
          RequireNumbers: False
          RequireSymbols: False
          RequireUppercase: False
  CognitoUserPoolClient:
    Type: "AWS::Cognito::UserPoolClient"
    Properties:
      ClientName: !Join ["", [!Ref ServiceName, -user-pool-client]]
      GenerateSecret: False
      UserPoolId:
        Ref: CognitoUserPool  
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      # BucketName: !Ref ServiceName  
      PublicAccessBlockConfiguration:
          BlockPublicAcls: True
          BlockPublicPolicy: True
          IgnorePublicAcls: True
          RestrictPublicBuckets: True
    
  SecurityGroupCustom:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: custom security group for timelogger
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref EC2InstanceType
      ImageId: !Ref EC2AMI
      KeyName: !Ref EC2keyName
      SecurityGroups:
        - !Ref SecurityGroupCustom
Outputs:
  EC2PublicIP:
    Value: !GetAtt EC2Instance.PublicIp
  S3BucketPath:
    Value: !GetAtt Bucket.DomainName
  CognitoUserPoolID:
    Value: !GetAtt CognitoUserPool.ProviderName
  CognitoUserPoolClientID:
    Value: !Ref CognitoUserPoolClient
